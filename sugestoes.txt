diplay: flex; - deixa todos os elementos 1 do lado do outro.
flex-wrap: wrap; - ele quebra em colunas ou linhas depende como ele vai está.
flex-wrap: colunm wrap; - é como se fosse flex-direction: colunm; e o flex-wrap: wrap;
O FLEXbOX não é feito pra formatar texto.

O O gap aplica espaçamento entre os itens e não na extremidade.

align-items - centraliza os icones com o texto, tanto vertical como na horizontal.
align-self - posso ainhar cada um dos itens seja em menu, etc da maneira que eu quiser.
Ex: posso ter um menu e deixar apenas 1 item diferenciado.

Tag CODE - É como se fosse uma span
<p>
  A função <code>selectAll()</code> destaca todo o texto no campo de entrada
  então o usuário pode, por exemplo, copiar ou deletar o texto.
</p>

i - é utilizado para add icones tb.
Ex: <i class="icone__nerd icone-item"></i>

li.videos__item>div.descricao-video>img+h3+p = Estrutura para fazer
<li class="videos__item">
            <div class="descricao-video">
                <img src="" alt="">
                <h3></h3>
                <p></p>
            </div>
        </li>

Display: grid; - display: grid. O grid é muito eficiente também nesse caso, quando precisamos 
organizar muitos itens em níveis diferentes dentro de um container.

flex-grow: 1;
flex-grow(crescimento): 1; - Isso significa que quando o espaço disponível é distribuído, o que tiver 
o grow maior no item flexível terá o dobro de espaço que os outros. Tb chega uma hora que ela não tem 
como crescer mais e não aceita crescer negativamente. Posso aplicar o grow em cada uma das li separadamente.

flex-shrink: 1;
flex-shrink
A propriedade 'flex-shrink' é ideal para ser aplicada quando queremos encolher elementos à medida que o seu container 
diminui de largura.
Diferente da propriedade flex-grow, que quanto maior o valor inserido, mais um item poderá crescer. Com a propriedade 
flex-shrink quanto maior o valor inserido, mais este item irá encolher em relação aos seus itens irmãos.



